{"ast":null,"code":"var _jsxFileName = \"D:\\\\projeto-ts\\\\src\\\\components\\\\Financeiro.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n\n// Definindo a interface para os dados financeiros\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FinancialManagement = () => {\n  _s();\n  const [financialData, setFinancialData] = useState([]); // Definindo o tipo de financialData como um array de FinancialRecord\n  const [currentBalance, setCurrentBalance] = useState(0); // Definindo o tipo de currentBalance como number\n\n  useEffect(() => {\n    // Aqui você fará uma chamada à API para obter os dados financeiros\n    // Por enquanto, usaremos dados de exemplo\n    const sampleFinancialData = [{\n      id: 1,\n      type: \"Receita\",\n      description: \"Consulta\",\n      amount: 1.800,\n      date: \"21-03-2024\"\n    }, {\n      id: 2,\n      type: \"Despesa\",\n      description: \"Medicamentos\",\n      amount: 0,\n      date: \"21-03-2024\"\n    }, {\n      id: 3,\n      type: \"Transferência\",\n      description: \"Transferência bancária\",\n      amount: 0,\n      date: \"2024-03-16\"\n    }\n    // Outros registros financeiros...\n    ];\n\n    setFinancialData(sampleFinancialData);\n  }, []);\n\n  // Calculando o saldo atual com base nos registros financeiros\n  useEffect(() => {\n    const newBalance = financialData.reduce((balance, item) => {\n      if (item.type === \"Receita\" || item.type === \"Transferência\") {\n        return balance + item.amount;\n      } else {\n        return balance - item.amount;\n      }\n    }, 0);\n    setCurrentBalance(newBalance);\n  }, [financialData]);\n\n  // Aqui você pode implementar funções para adicionar, remover ou atualizar registros financeiros\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gest\\xE3o Financeira\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Saldo Atual: R$ \", currentBalance.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tipo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Descri\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Valor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: financialData.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(FinancialManagement, \"sx74zt32OZuvofRJcSkv8hE3g6A=\");\n_c = FinancialManagement;\nexport default FinancialManagement;\nvar _c;\n$RefreshReg$(_c, \"FinancialManagement\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FinancialManagement","_s","financialData","setFinancialData","currentBalance","setCurrentBalance","sampleFinancialData","id","type","description","amount","date","newBalance","reduce","balance","item","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","map","_c","$RefreshReg$"],"sources":["D:/projeto-ts/src/components/Financeiro.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n// Definindo a interface para os dados financeiros\ninterface FinancialRecord {\n  id: number;\n  type: string;\n  description: string;\n  amount: number;\n  date: string;\n}\n\nconst FinancialManagement: React.FC = () => {\n  const [financialData, setFinancialData] = useState<FinancialRecord[]>([]); // Definindo o tipo de financialData como um array de FinancialRecord\n  const [currentBalance, setCurrentBalance] = useState<number>(0); // Definindo o tipo de currentBalance como number\n\n  useEffect(() => {\n    // Aqui você fará uma chamada à API para obter os dados financeiros\n    // Por enquanto, usaremos dados de exemplo\n    const sampleFinancialData: FinancialRecord[] = [\n      { id: 1, type: \"Receita\", description: \"Consulta\", amount: 1.800, date: \"21-03-2024\" },\n      { id: 2, type: \"Despesa\", description: \"Medicamentos\", amount: 0, date: \"21-03-2024\" },\n      { id: 3, type: \"Transferência\", description: \"Transferência bancária\", amount: 0, date: \"2024-03-16\" },\n      // Outros registros financeiros...\n    ];\n    setFinancialData(sampleFinancialData);\n  }, []);\n\n  // Calculando o saldo atual com base nos registros financeiros\n  useEffect(() => {\n    const newBalance = financialData.reduce((balance, item) => {\n      if (item.type === \"Receita\" || item.type === \"Transferência\") {\n        return balance + item.amount;\n      } else {\n        return balance - item.amount;\n      }\n    }, 0);\n    setCurrentBalance(newBalance);\n  }, [financialData]);\n\n  // Aqui você pode implementar funções para adicionar, remover ou atualizar registros financeiros\n\n  return (\n    <div>\n      <h2>Gestão Financeira</h2>\n      <h3>Saldo Atual: R$ {currentBalance.toFixed(2)}</h3>\n      <table>\n        <thead>\n          <tr>\n            <th>Tipo</th>\n            <th>Descrição</th>\n            <th>Valor</th>\n            <th>Data</th>\n          </tr>\n        </thead>\n        <tbody>\n          {financialData.map(item => (\n            <tr key={item.id}>\n              <td>{item.type}</td>\n              <td>{item.description}</td>\n              <td>{item.amount}</td>\n              <td>{item.date}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {/* Aqui você pode adicionar ferramentas adicionais de gestão financeira, como lançamento financeiro da agenda ou prontuário, cadastro de convênios, etc. */}\n    </div>\n  );\n};\n\nexport default FinancialManagement;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}