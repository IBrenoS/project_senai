{"ast":null,"code":"function futureSeconds(text) {\n  return text.replace(/sekuntia?/, \"sekunnin\");\n}\nfunction futureMinutes(text) {\n  return text.replace(/minuuttia?/, \"minuutin\");\n}\nfunction futureHours(text) {\n  return text.replace(/tuntia?/, \"tunnin\");\n}\nfunction futureDays(text) {\n  return text.replace(/päivää?/, \"päivän\");\n}\nfunction futureWeeks(text) {\n  return text.replace(/(viikko|viikkoa)/, \"viikon\");\n}\nfunction futureMonths(text) {\n  return text.replace(/(kuukausi|kuukautta)/, \"kuukauden\");\n}\nfunction futureYears(text) {\n  return text.replace(/(vuosi|vuotta)/, \"vuoden\");\n}\nconst formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"alle sekunti\",\n    other: \"alle {{count}} sekuntia\",\n    futureTense: futureSeconds\n  },\n  xSeconds: {\n    one: \"sekunti\",\n    other: \"{{count}} sekuntia\",\n    futureTense: futureSeconds\n  },\n  halfAMinute: {\n    one: \"puoli minuuttia\",\n    other: \"puoli minuuttia\",\n    futureTense: _text => \"puolen minuutin\"\n  },\n  lessThanXMinutes: {\n    one: \"alle minuutti\",\n    other: \"alle {{count}} minuuttia\",\n    futureTense: futureMinutes\n  },\n  xMinutes: {\n    one: \"minuutti\",\n    other: \"{{count}} minuuttia\",\n    futureTense: futureMinutes\n  },\n  aboutXHours: {\n    one: \"noin tunti\",\n    other: \"noin {{count}} tuntia\",\n    futureTense: futureHours\n  },\n  xHours: {\n    one: \"tunti\",\n    other: \"{{count}} tuntia\",\n    futureTense: futureHours\n  },\n  xDays: {\n    one: \"päivä\",\n    other: \"{{count}} päivää\",\n    futureTense: futureDays\n  },\n  aboutXWeeks: {\n    one: \"noin viikko\",\n    other: \"noin {{count}} viikkoa\",\n    futureTense: futureWeeks\n  },\n  xWeeks: {\n    one: \"viikko\",\n    other: \"{{count}} viikkoa\",\n    futureTense: futureWeeks\n  },\n  aboutXMonths: {\n    one: \"noin kuukausi\",\n    other: \"noin {{count}} kuukautta\",\n    futureTense: futureMonths\n  },\n  xMonths: {\n    one: \"kuukausi\",\n    other: \"{{count}} kuukautta\",\n    futureTense: futureMonths\n  },\n  aboutXYears: {\n    one: \"noin vuosi\",\n    other: \"noin {{count}} vuotta\",\n    futureTense: futureYears\n  },\n  xYears: {\n    one: \"vuosi\",\n    other: \"{{count}} vuotta\",\n    futureTense: futureYears\n  },\n  overXYears: {\n    one: \"yli vuosi\",\n    other: \"yli {{count}} vuotta\",\n    futureTense: futureYears\n  },\n  almostXYears: {\n    one: \"lähes vuosi\",\n    other: \"lähes {{count}} vuotta\",\n    futureTense: futureYears\n  }\n};\nexport const formatDistance = (token, count, options) => {\n  const tokenValue = formatDistanceLocale[token];\n  const result = count === 1 ? tokenValue.one : tokenValue.other.replace(\"{{count}}\", String(count));\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return tokenValue.futureTense(result) + \" kuluttua\";\n    } else {\n      return result + \" sitten\";\n    }\n  }\n  return result;\n};","map":{"version":3,"names":["futureSeconds","text","replace","futureMinutes","futureHours","futureDays","futureWeeks","futureMonths","futureYears","formatDistanceLocale","lessThanXSeconds","one","other","futureTense","xSeconds","halfAMinute","_text","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance","token","count","options","tokenValue","result","String","addSuffix","comparison"],"sources":["D:/projeto-ts/node_modules/date-fns/locale/fi/_lib/formatDistance.mjs"],"sourcesContent":["function futureSeconds(text) {\n  return text.replace(/sekuntia?/, \"sekunnin\");\n}\n\nfunction futureMinutes(text) {\n  return text.replace(/minuuttia?/, \"minuutin\");\n}\n\nfunction futureHours(text) {\n  return text.replace(/tuntia?/, \"tunnin\");\n}\n\nfunction futureDays(text) {\n  return text.replace(/päivää?/, \"päivän\");\n}\n\nfunction futureWeeks(text) {\n  return text.replace(/(viikko|viikkoa)/, \"viikon\");\n}\n\nfunction futureMonths(text) {\n  return text.replace(/(kuukausi|kuukautta)/, \"kuukauden\");\n}\n\nfunction futureYears(text) {\n  return text.replace(/(vuosi|vuotta)/, \"vuoden\");\n}\n\nconst formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"alle sekunti\",\n    other: \"alle {{count}} sekuntia\",\n    futureTense: futureSeconds,\n  },\n\n  xSeconds: {\n    one: \"sekunti\",\n    other: \"{{count}} sekuntia\",\n    futureTense: futureSeconds,\n  },\n\n  halfAMinute: {\n    one: \"puoli minuuttia\",\n    other: \"puoli minuuttia\",\n    futureTense: (_text) => \"puolen minuutin\",\n  },\n\n  lessThanXMinutes: {\n    one: \"alle minuutti\",\n    other: \"alle {{count}} minuuttia\",\n    futureTense: futureMinutes,\n  },\n\n  xMinutes: {\n    one: \"minuutti\",\n    other: \"{{count}} minuuttia\",\n    futureTense: futureMinutes,\n  },\n\n  aboutXHours: {\n    one: \"noin tunti\",\n    other: \"noin {{count}} tuntia\",\n    futureTense: futureHours,\n  },\n\n  xHours: {\n    one: \"tunti\",\n    other: \"{{count}} tuntia\",\n    futureTense: futureHours,\n  },\n\n  xDays: {\n    one: \"päivä\",\n    other: \"{{count}} päivää\",\n    futureTense: futureDays,\n  },\n\n  aboutXWeeks: {\n    one: \"noin viikko\",\n    other: \"noin {{count}} viikkoa\",\n    futureTense: futureWeeks,\n  },\n\n  xWeeks: {\n    one: \"viikko\",\n    other: \"{{count}} viikkoa\",\n    futureTense: futureWeeks,\n  },\n\n  aboutXMonths: {\n    one: \"noin kuukausi\",\n    other: \"noin {{count}} kuukautta\",\n    futureTense: futureMonths,\n  },\n\n  xMonths: {\n    one: \"kuukausi\",\n    other: \"{{count}} kuukautta\",\n    futureTense: futureMonths,\n  },\n\n  aboutXYears: {\n    one: \"noin vuosi\",\n    other: \"noin {{count}} vuotta\",\n    futureTense: futureYears,\n  },\n\n  xYears: {\n    one: \"vuosi\",\n    other: \"{{count}} vuotta\",\n    futureTense: futureYears,\n  },\n\n  overXYears: {\n    one: \"yli vuosi\",\n    other: \"yli {{count}} vuotta\",\n    futureTense: futureYears,\n  },\n\n  almostXYears: {\n    one: \"lähes vuosi\",\n    other: \"lähes {{count}} vuotta\",\n    futureTense: futureYears,\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  const tokenValue = formatDistanceLocale[token];\n  const result =\n    count === 1\n      ? tokenValue.one\n      : tokenValue.other.replace(\"{{count}}\", String(count));\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return tokenValue.futureTense(result) + \" kuluttua\";\n    } else {\n      return result + \" sitten\";\n    }\n  }\n\n  return result;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}