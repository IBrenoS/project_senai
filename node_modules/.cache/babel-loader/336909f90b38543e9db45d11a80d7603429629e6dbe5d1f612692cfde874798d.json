{"ast":null,"code":"var _jsxFileName = \"D:\\\\projeto-ts\\\\src\\\\components\\\\Financeiro.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Chart } from \"react-google-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FinancialManagement = () => {\n  _s();\n  const [financialData, setFinancialData] = useState([]);\n  const [currentBalance, setCurrentBalance] = useState(0);\n  const [newEntry, setNewEntry] = useState({\n    type: \"Receita\",\n    description: \"\",\n    amount: 0,\n    date: \"\"\n  });\n  useEffect(() => {\n    // Aqui você faria uma chamada à API para obter os dados financeiros\n    // Por enquanto, usaremos dados de exemplo\n    const sampleFinancialData = [{\n      id: 1,\n      type: \"Receita\",\n      description: \"Consulta\",\n      amount: 100,\n      date: \"2024-03-18\"\n    }, {\n      id: 2,\n      type: \"Despesa\",\n      description: \"Medicamentos\",\n      amount: 50,\n      date: \"2024-03-17\"\n    }, {\n      id: 3,\n      type: \"Transferência\",\n      description: \"Transferência bancária\",\n      amount: 30,\n      date: \"2024-03-16\"\n    }\n    // Outros registros financeiros...\n    ];\n\n    setFinancialData(sampleFinancialData);\n  }, []);\n  useEffect(() => {\n    const newBalance = financialData.reduce((balance, item) => {\n      if (item.type === \"Receita\") {\n        return balance + item.amount;\n      } else {\n        return balance - item.amount;\n      }\n    }, 0);\n    setCurrentBalance(newBalance);\n  }, [financialData]);\n  const handleAddEntry = () => {\n    if (!newEntry.description || !newEntry.amount || !newEntry.date) {\n      alert(\"Por favor, preencha todos os campos\");\n      return;\n    }\n    const id = financialData.length + 1;\n    const entry = {\n      id,\n      ...newEntry\n    };\n    setFinancialData([...financialData, entry]);\n    setNewEntry({\n      type: \"Receita\",\n      description: \"\",\n      amount: 0,\n      date: \"\"\n    });\n  };\n\n  // Preparando os dados para o gráfico do Google Charts\n  const chartData = financialData.reduce((acc, item) => {\n    const idx = acc.findIndex(entry => entry[0] === item.type);\n    if (idx !== -1) {\n      acc[idx][1] += item.amount;\n    } else {\n      acc.push([item.type, item.amount]);\n    }\n    return acc;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gest\\xE3o Financeira\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Saldo Atual: R$ \", currentBalance.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Adicionar Lan\\xE7amento Financeiro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Tipo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newEntry.type,\n          onChange: e => setNewEntry({\n            ...newEntry,\n            type: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Receita\",\n            children: \"Receita\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Despesa\",\n            children: \"Despesa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Transfer\\xEAncia\",\n            children: \"Transfer\\xEAncia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Descri\\xE7\\xE3o:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newEntry.description,\n          onChange: e => setNewEntry({\n            ...newEntry,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Valor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: newEntry.amount,\n          onChange: e => setNewEntry({\n            ...newEntry,\n            amount: parseFloat(e.target.value)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: newEntry.date,\n          onChange: e => setNewEntry({\n            ...newEntry,\n            date: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddEntry,\n        children: \"Adicionar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      width: \"500px\",\n      height: \"300px\",\n      chartType: \"PieChart\",\n      loader: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Carregando Gr\\xE1fico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this),\n      data: [[\"Tipo\", \"Valor\"], ...chartData],\n      options: {\n        title: \"Distribuição dos Tipos de Lançamento Financeiro\",\n        colors\n      },\n      rootProps: {\n        \"data-testid\": \"1\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tipo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Descri\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Valor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: financialData.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(FinancialManagement, \"hwdzi9NmKNh4KlAn/QOsNgQsztE=\");\n_c = FinancialManagement;\nexport default FinancialManagement;\nvar _c;\n$RefreshReg$(_c, \"FinancialManagement\");","map":{"version":3,"names":["React","useState","useEffect","Chart","jsxDEV","_jsxDEV","FinancialManagement","_s","financialData","setFinancialData","currentBalance","setCurrentBalance","newEntry","setNewEntry","type","description","amount","date","sampleFinancialData","id","newBalance","reduce","balance","item","handleAddEntry","alert","length","entry","chartData","acc","idx","findIndex","push","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","value","onChange","e","target","parseFloat","onClick","width","height","chartType","loader","data","options","title","colors","rootProps","map","_c","$RefreshReg$"],"sources":["D:/projeto-ts/src/components/Financeiro.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Chart } from \"react-google-charts\";\n\ninterface FinancialEntry {\n  id: number;\n  type: \"Receita\" | \"Despesa\" | \"Transferência\";\n  description: string;\n  amount: number;\n  date: string;\n}\n\nconst FinancialManagement: React.FC = () => {\n  const [financialData, setFinancialData] = useState<FinancialEntry[]>([]);\n  const [currentBalance, setCurrentBalance] = useState<number>(0);\n  const [newEntry, setNewEntry] = useState<Partial<FinancialEntry>>({\n    type: \"Receita\",\n    description: \"\",\n    amount: 0,\n    date: \"\",\n  });\n\n  useEffect(() => {\n    // Aqui você faria uma chamada à API para obter os dados financeiros\n    // Por enquanto, usaremos dados de exemplo\n    const sampleFinancialData: FinancialEntry[] = [\n      {\n        id: 1,\n        type: \"Receita\",\n        description: \"Consulta\",\n        amount: 100,\n        date: \"2024-03-18\",\n      },\n      {\n        id: 2,\n        type: \"Despesa\",\n        description: \"Medicamentos\",\n        amount: 50,\n        date: \"2024-03-17\",\n      },\n      {\n        id: 3,\n        type: \"Transferência\",\n        description: \"Transferência bancária\",\n        amount: 30,\n        date: \"2024-03-16\",\n      },\n      // Outros registros financeiros...\n    ];\n    setFinancialData(sampleFinancialData);\n  }, []);\n\n  useEffect(() => {\n    const newBalance = financialData.reduce((balance, item) => {\n      if (item.type === \"Receita\") {\n        return balance + item.amount;\n      } else {\n        return balance - item.amount;\n      }\n    }, 0);\n    setCurrentBalance(newBalance);\n  }, [financialData]);\n\n  const handleAddEntry = () => {\n    if (!newEntry.description || !newEntry.amount || !newEntry.date) {\n      alert(\"Por favor, preencha todos os campos\");\n      return;\n    }\n    const id = financialData.length + 1;\n    const entry: FinancialEntry = { id, ...newEntry } as FinancialEntry;\n    setFinancialData([...financialData, entry]);\n    setNewEntry({ type: \"Receita\", description: \"\", amount: 0, date: \"\" });\n  };\n\n  // Preparando os dados para o gráfico do Google Charts\n  const chartData: [string, number][] = financialData.reduce((acc, item) => {\n    const idx = acc.findIndex((entry) => entry[0] === item.type);\n    if (idx !== -1) {\n      acc[idx][1] += item.amount;\n    } else {\n      acc.push([item.type, item.amount]);\n    }\n    return acc;\n  }, [] as [string, number][]);\n\n  return (\n    <div>\n      <h2>Gestão Financeira</h2>\n      <h3>Saldo Atual: R$ {currentBalance.toFixed(2)}</h3>\n      <div>\n        <h3>Adicionar Lançamento Financeiro</h3>\n        <div>\n          <label>Tipo:</label>\n          <select\n            value={newEntry.type}\n            onChange={(e) =>\n              setNewEntry({\n                ...newEntry,\n                type: e.target.value as \"Receita\" | \"Despesa\" | \"Transferência\",\n              })\n            }\n          >\n            <option value=\"Receita\">Receita</option>\n            <option value=\"Despesa\">Despesa</option>\n            <option value=\"Transferência\">Transferência</option>\n          </select>\n        </div>\n        <div>\n          <label>Descrição:</label>\n          <input\n            type=\"text\"\n            value={newEntry.description}\n            onChange={(e) =>\n              setNewEntry({ ...newEntry, description: e.target.value })\n            }\n          />\n        </div>\n        <div>\n          <label>Valor:</label>\n          <input\n            type=\"number\"\n            value={newEntry.amount}\n            onChange={(e) =>\n              setNewEntry({ ...newEntry, amount: parseFloat(e.target.value) })\n            }\n          />\n        </div>\n        <div>\n          <label>Data:</label>\n          <input\n            type=\"date\"\n            value={newEntry.date}\n            onChange={(e) => setNewEntry({ ...newEntry, date: e.target.value })}\n          />\n        </div>\n        <button onClick={handleAddEntry}>Adicionar</button>\n      </div>\n      <Chart\n        width={\"500px\"}\n        height={\"300px\"}\n        chartType=\"PieChart\"\n        loader={<div>Carregando Gráfico</div>}\n        data={[[\"Tipo\", \"Valor\"], ...chartData]}\n        options={{\n          title: \"Distribuição dos Tipos de Lançamento Financeiro\",\n          colors\n        }}\n        rootProps={{ \"data-testid\": \"1\" }}\n      />\n      <table>\n        <thead>\n          <tr>\n            <th>Tipo</th>\n            <th>Descrição</th>\n            <th>Valor</th>\n            <th>Data</th>\n          </tr>\n        </thead>\n        <tbody>\n          {financialData.map((item) => (\n            <tr key={item.id}>\n              <td>{item.type}</td>\n              <td>{item.description}</td>\n              <td>{item.amount}</td>\n              <td>{item.date}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {/* Aqui você pode adicionar ferramentas adicionais de gestão financeira, como lançamento financeiro da agenda ou prontuário, cadastro de convênios, etc. */}\n    </div>\n  );\n};\n\nexport default FinancialManagement;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}