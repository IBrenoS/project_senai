{"ast":null,"code":"import { isSameWeek } from \"../../../isSameWeek.mjs\";\nconst adjectivesLastWeek = {\n  masculine: \"ostatni\",\n  feminine: \"ostatnia\"\n};\nconst adjectivesThisWeek = {\n  masculine: \"ten\",\n  feminine: \"ta\"\n};\nconst adjectivesNextWeek = {\n  masculine: \"następny\",\n  feminine: \"następna\"\n};\nconst dayGrammaticalGender = {\n  0: \"feminine\",\n  1: \"masculine\",\n  2: \"masculine\",\n  3: \"feminine\",\n  4: \"masculine\",\n  5: \"masculine\",\n  6: \"feminine\"\n};\nfunction dayAndTimeWithAdjective(token, date, baseDate, options) {\n  let adjectives;\n  if (isSameWeek(date, baseDate, options)) {\n    adjectives = adjectivesThisWeek;\n  } else if (token === \"lastWeek\") {\n    adjectives = adjectivesLastWeek;\n  } else if (token === \"nextWeek\") {\n    adjectives = adjectivesNextWeek;\n  } else {\n    throw new Error(`Cannot determine adjectives for token ${token}`);\n  }\n  const day = date.getDay();\n  const grammaticalGender = dayGrammaticalGender[day];\n  const adjective = adjectives[grammaticalGender];\n  return `'${adjective}' eeee 'o' p`;\n}\nconst formatRelativeLocale = {\n  lastWeek: dayAndTimeWithAdjective,\n  yesterday: \"'wczoraj o' p\",\n  today: \"'dzisiaj o' p\",\n  tomorrow: \"'jutro o' p\",\n  nextWeek: dayAndTimeWithAdjective,\n  other: \"P\"\n};\nexport const formatRelative = (token, date, baseDate, options) => {\n  const format = formatRelativeLocale[token];\n  if (typeof format === \"function\") {\n    return format(token, date, baseDate, options);\n  }\n  return format;\n};","map":{"version":3,"names":["isSameWeek","adjectivesLastWeek","masculine","feminine","adjectivesThisWeek","adjectivesNextWeek","dayGrammaticalGender","dayAndTimeWithAdjective","token","date","baseDate","options","adjectives","Error","day","getDay","grammaticalGender","adjective","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","other","formatRelative","format"],"sources":["D:/projeto-ts/node_modules/date-fns/locale/pl/_lib/formatRelative.mjs"],"sourcesContent":["import { isSameWeek } from \"../../../isSameWeek.mjs\";\n\nconst adjectivesLastWeek = {\n  masculine: \"ostatni\",\n  feminine: \"ostatnia\",\n};\n\nconst adjectivesThisWeek = {\n  masculine: \"ten\",\n  feminine: \"ta\",\n};\n\nconst adjectivesNextWeek = {\n  masculine: \"następny\",\n  feminine: \"następna\",\n};\n\nconst dayGrammaticalGender = {\n  0: \"feminine\",\n  1: \"masculine\",\n  2: \"masculine\",\n  3: \"feminine\",\n  4: \"masculine\",\n  5: \"masculine\",\n  6: \"feminine\",\n};\n\nfunction dayAndTimeWithAdjective(token, date, baseDate, options) {\n  let adjectives;\n  if (isSameWeek(date, baseDate, options)) {\n    adjectives = adjectivesThisWeek;\n  } else if (token === \"lastWeek\") {\n    adjectives = adjectivesLastWeek;\n  } else if (token === \"nextWeek\") {\n    adjectives = adjectivesNextWeek;\n  } else {\n    throw new Error(`Cannot determine adjectives for token ${token}`);\n  }\n\n  const day = date.getDay();\n  const grammaticalGender = dayGrammaticalGender[day];\n\n  const adjective = adjectives[grammaticalGender];\n\n  return `'${adjective}' eeee 'o' p`;\n}\n\nconst formatRelativeLocale = {\n  lastWeek: dayAndTimeWithAdjective,\n  yesterday: \"'wczoraj o' p\",\n  today: \"'dzisiaj o' p\",\n  tomorrow: \"'jutro o' p\",\n  nextWeek: dayAndTimeWithAdjective,\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, baseDate, options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(token, date, baseDate, options);\n  }\n\n  return format;\n};\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,yBAAyB;AAEpD,MAAMC,kBAAkB,GAAG;EACzBC,SAAS,EAAE,SAAS;EACpBC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,kBAAkB,GAAG;EACzBF,SAAS,EAAE,KAAK;EAChBC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAME,kBAAkB,GAAG;EACzBH,SAAS,EAAE,UAAU;EACrBC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMG,oBAAoB,GAAG;EAC3B,CAAC,EAAE,UAAU;EACb,CAAC,EAAE,WAAW;EACd,CAAC,EAAE,WAAW;EACd,CAAC,EAAE,UAAU;EACb,CAAC,EAAE,WAAW;EACd,CAAC,EAAE,WAAW;EACd,CAAC,EAAE;AACL,CAAC;AAED,SAASC,uBAAuBA,CAACC,KAAK,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,OAAO,EAAE;EAC/D,IAAIC,UAAU;EACd,IAAIZ,UAAU,CAACS,IAAI,EAAEC,QAAQ,EAAEC,OAAO,CAAC,EAAE;IACvCC,UAAU,GAAGR,kBAAkB;EACjC,CAAC,MAAM,IAAII,KAAK,KAAK,UAAU,EAAE;IAC/BI,UAAU,GAAGX,kBAAkB;EACjC,CAAC,MAAM,IAAIO,KAAK,KAAK,UAAU,EAAE;IAC/BI,UAAU,GAAGP,kBAAkB;EACjC,CAAC,MAAM;IACL,MAAM,IAAIQ,KAAK,CAAE,yCAAwCL,KAAM,EAAC,CAAC;EACnE;EAEA,MAAMM,GAAG,GAAGL,IAAI,CAACM,MAAM,CAAC,CAAC;EACzB,MAAMC,iBAAiB,GAAGV,oBAAoB,CAACQ,GAAG,CAAC;EAEnD,MAAMG,SAAS,GAAGL,UAAU,CAACI,iBAAiB,CAAC;EAE/C,OAAQ,IAAGC,SAAU,cAAa;AACpC;AAEA,MAAMC,oBAAoB,GAAG;EAC3BC,QAAQ,EAAEZ,uBAAuB;EACjCa,SAAS,EAAE,eAAe;EAC1BC,KAAK,EAAE,eAAe;EACtBC,QAAQ,EAAE,aAAa;EACvBC,QAAQ,EAAEhB,uBAAuB;EACjCiB,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAACjB,KAAK,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,OAAO,KAAK;EAChE,MAAMe,MAAM,GAAGR,oBAAoB,CAACV,KAAK,CAAC;EAE1C,IAAI,OAAOkB,MAAM,KAAK,UAAU,EAAE;IAChC,OAAOA,MAAM,CAAClB,KAAK,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,OAAO,CAAC;EAC/C;EAEA,OAAOe,MAAM;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}