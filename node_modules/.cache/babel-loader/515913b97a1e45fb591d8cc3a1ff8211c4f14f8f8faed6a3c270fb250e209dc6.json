{"ast":null,"code":"var _jsxFileName = \"D:\\\\projeto-ts\\\\src\\\\components\\\\Graficos.tsx\";\nimport React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Charts = () => {\n  // Dados de exemplo para o gráfico de pacientes por convênio\n  const patientsByInsuranceData = {\n    labels: [\"Convênio A\", \"Convênio B\", \"Convênio C\"],\n    datasets: [{\n      label: \"Pacientes por Convênio\",\n      data: [30, 20, 50],\n      //usar os dados reais obtidos do backend\n      backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n      hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n    }]\n  };\n\n  // Dados de exemplo para o gráfico de perfil dos pacientes\n  const patientsProfileData = {\n    labels: [\"Crianças\", \"Adultos\", \"Idosos\"],\n    datasets: [{\n      label: \"Perfil dos Pacientes\",\n      data: [40, 50, 30],\n      // Aqui você usaria os dados reais obtidos do backend\n      backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n      hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n    }]\n  };\n\n  // Dados de exemplo para o gráfico de pacientes por sexo\n  const patientsByGenderData = {\n    labels: [\"Homem\", \"Mulher\"],\n    datasets: [{\n      label: \"Pacientes por Sexo\",\n      data: [70, 50],\n      //usar os dados reais obtidos do backend\n      backgroundColor: [\"#4CAF50\", \"#E91E63\"],\n      hoverBackgroundColor: [\"#4CAF50\", \"#E91E63\"]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gr\\xE1ficos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Pacientes por Conv\\xEAnio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n        data: patientsByInsuranceData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Perfil dos Pacientes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n        data: patientsProfileData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Pacientes por Sexo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n        data: patientsByGenderData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c = Charts;\nexport default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["React","Doughnut","jsxDEV","_jsxDEV","Charts","patientsByInsuranceData","labels","datasets","label","data","backgroundColor","hoverBackgroundColor","patientsProfileData","patientsByGenderData","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/projeto-ts/src/components/Graficos.tsx"],"sourcesContent":["import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nconst Charts: React.FC = () => {\n  // Dados de exemplo para o gráfico de pacientes por convênio\n  const patientsByInsuranceData = {\n    labels: [\"Convênio A\", \"Convênio B\", \"Convênio C\"],\n    datasets: [\n      {\n        label: \"Pacientes por Convênio\",\n        data: [30, 20, 50], //usar os dados reais obtidos do backend\n        backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n        hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n      },\n    ],\n  };\n\n  // Dados de exemplo para o gráfico de perfil dos pacientes\n  const patientsProfileData = {\n    labels: [\"Crianças\", \"Adultos\", \"Idosos\"],\n    datasets: [\n      {\n        label: \"Perfil dos Pacientes\",\n        data: [40, 50, 30], // Aqui você usaria os dados reais obtidos do backend\n        backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n        hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n      },\n    ],\n  };\n\n  // Dados de exemplo para o gráfico de pacientes por sexo\n  const patientsByGenderData = {\n    labels: [\"Homem\", \"Mulher\"],\n    datasets: [\n      {\n        label: \"Pacientes por Sexo\",\n        data: [70, 50], //usar os dados reais obtidos do backend\n        backgroundColor: [\"#4CAF50\", \"#E91E63\"],\n        hoverBackgroundColor: [\"#4CAF50\", \"#E91E63\"],\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <h2>Gráficos</h2>\n      <div>\n        <h3>Pacientes por Convênio</h3>\n        <Doughnut data={patientsByInsuranceData} />\n      </div>\n      <div>\n        <h3>Perfil dos Pacientes</h3>\n        <Doughnut data={patientsProfileData} />\n      </div>\n      <div>\n        <h3>Pacientes por Sexo</h3>\n        <Doughnut data={patientsByGenderData} />\n      </div>\n    </div>\n  );\n};\n\nexport default Charts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}