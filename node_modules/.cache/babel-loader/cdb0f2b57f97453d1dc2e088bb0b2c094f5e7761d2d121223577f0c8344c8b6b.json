{"ast":null,"code":"import { setISODay } from \"../../../setISODay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// ISO day of week\nexport class ISODayParser extends Parser {\n  priority = 90;\n  parse(dateString, token, match) {\n    const valueCallback = value => {\n      if (value === 0) {\n        return 7;\n      }\n      return value;\n    };\n    switch (token) {\n      // 2\n      case \"i\":\n      case \"ii\":\n        // 02\n        return parseNDigits(token.length, dateString);\n      // 2nd\n      case \"io\":\n        return match.ordinalNumber(dateString, {\n          unit: \"day\"\n        });\n      // Tue\n      case \"iii\":\n        return mapValue(match.day(dateString, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        }) || match.day(dateString, {\n          width: \"short\",\n          context: \"formatting\"\n        }) || match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\"\n        }), valueCallback);\n      // T\n      case \"iiiii\":\n        return mapValue(match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\"\n        }), valueCallback);\n      // Tu\n      case \"iiiiii\":\n        return mapValue(match.day(dateString, {\n          width: \"short\",\n          context: \"formatting\"\n        }) || match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\"\n        }), valueCallback);\n      // Tuesday\n      case \"iiii\":\n      default:\n        return mapValue(match.day(dateString, {\n          width: \"wide\",\n          context: \"formatting\"\n        }) || match.day(dateString, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        }) || match.day(dateString, {\n          width: \"short\",\n          context: \"formatting\"\n        }) || match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\"\n        }), valueCallback);\n    }\n  }\n  validate(_date, value) {\n    return value >= 1 && value <= 7;\n  }\n  set(date, _flags, value) {\n    date = setISODay(date, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n  incompatibleTokens = [\"y\", \"Y\", \"u\", \"q\", \"Q\", \"M\", \"L\", \"w\", \"d\", \"D\", \"E\", \"e\", \"c\", \"t\", \"T\"];\n}","map":{"version":3,"names":["setISODay","Parser","mapValue","parseNDigits","ISODayParser","priority","parse","dateString","token","match","valueCallback","value","length","ordinalNumber","unit","day","width","context","validate","_date","set","date","_flags","setHours","incompatibleTokens"],"sources":["D:/projeto-ts/node_modules/date-fns/parse/_lib/parsers/ISODayParser.mjs"],"sourcesContent":["import { setISODay } from \"../../../setISODay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// ISO day of week\nexport class ISODayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => {\n      if (value === 0) {\n        return 7;\n      }\n      return value;\n    };\n\n    switch (token) {\n      // 2\n      case \"i\":\n      case \"ii\": // 02\n        return parseNDigits(token.length, dateString);\n      // 2nd\n      case \"io\":\n        return match.ordinalNumber(dateString, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // T\n      case \"iiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          }),\n          valueCallback,\n        );\n      // Tu\n      case \"iiiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"short\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // Tuesday\n      case \"iiii\":\n      default:\n        return mapValue(\n          match.day(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"abbreviated\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 7;\n  }\n\n  set(date, _flags, value) {\n    date = setISODay(date, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}