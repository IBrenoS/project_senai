{"ast":null,"code":"var _jsxFileName = \"D:\\\\projeto-ts\\\\src\\\\layout\\\\PatientList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../css/patientList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientList = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n  useEffect(() => {\n    // Fazer a chamada do API para obter a lista de pacientes do backend\n    // Dados de exemplo\n    const pacientesExemplo = [{\n      id: 1,\n      nome: \"João Silva\",\n      idade: 45,\n      condicao: \"Hipertensão\"\n    }, {\n      id: 2,\n      nome: \"Maria Santos\",\n      idade: 32,\n      condicao: \"Diabetes\"\n    }, {\n      id: 3,\n      nome: \"José Oliveira\",\n      idade: 60,\n      condicao: \"Artrite\"\n    }, {\n      id: 4,\n      nome: \"Carlos dos Santos\",\n      idade\n    }];\n    setPatients(pacientesExemplo);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patient-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"patient-list-title\",\n      children: \"Lista de Pacientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"patient-list-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Idade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Condi\\xE7\\xE3o M\\xE9dica\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: patients.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.nome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.idade\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.condicao\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, patient.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientList, \"2mHPNi2MF+s8ms7PrTd3nXwgmV8=\");\n_c = PatientList;\nexport default PatientList;\nvar _c;\n$RefreshReg$(_c, \"PatientList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PatientList","_s","patients","setPatients","pacientesExemplo","id","nome","idade","condicao","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","patient","_c","$RefreshReg$"],"sources":["D:/projeto-ts/src/layout/PatientList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../css/patientList.css\";\n\ninterface Paciente {\n  id: number;\n  nome: string;\n  idade: number;\n  condicao: string;\n}\n\nconst PatientList: React.FC = () => {\n  const [patients, setPatients] = useState<Paciente[]>([]);\n\n  useEffect(() => {\n    // Fazer a chamada do API para obter a lista de pacientes do backend\n    // Dados de exemplo\n    const pacientesExemplo: Paciente[] = [\n      { id: 1, nome: \"João Silva\", idade: 45, condicao: \"Hipertensão\" },\n      { id: 2, nome: \"Maria Santos\", idade: 32, condicao: \"Diabetes\" },\n      { id: 3, nome: \"José Oliveira\", idade: 60, condicao: \"Artrite\" },\n      { id: 4, nome: \"Carlos dos Santos\", idade}\n    ];\n    setPatients(pacientesExemplo);\n  }, []);\n\n  return (\n    <div className=\"patient-list-container\">\n      <h2 className=\"patient-list-title\">Lista de Pacientes</h2>\n      <table className=\"patient-list-table\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Nome</th>\n            <th>Idade</th>\n            <th>Condição Médica</th>\n          </tr>\n        </thead>\n        <tbody>\n          {patients.map((patient) => (\n            <tr key={patient.id}>\n              <td>{patient.id}</td>\n              <td>{patient.nome}</td>\n              <td>{patient.idade}</td>\n              <td>{patient.condicao}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default PatientList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}