{"ast":null,"code":"var _jsxFileName = \"D:\\\\projeto-ts\\\\src\\\\pages\\\\Pacientes\\\\pacienteInfo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PacienteInfo = ({\n  token\n}) => {\n  _s();\n  const [paciente, setPaciente] = useState({\n    nome: \"\",\n    sobrenome: \"\",\n    dataNascimento: \"\",\n    cpf: \"\",\n    email: \"\"\n  });\n  const [editMode, setEditMode] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  const [confirmarSenha, setConfirmarSenha] = useState(\"\");\n  const [refreshToken, setRefreshToken] = useState(\"\");\n  const [accessToken, setAcessToken] = useState(token);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3000/paciente\", {\n          headers: {\n            Authorization: accessToken\n          }\n        });\n        setPaciente(response.data.paciente);\n        setRefreshToken(response.data.refreshToken);\n      } catch (error) {\n        console.error(\"Erro ao obter informações do paciente:\", error);\n      }\n    };\n    fetchData();\n  }, [accessToken]);\n  const obterNovoToken = async refreshToken => {\n    try {\n      // Chame a nova rota de renovação de token\n      const response = await axios.post(\"/paciente/refresh-token\", {\n        refreshToken\n      });\n\n      // Retorne o novo token extraído da resposta\n      return response.data.newToken;\n    } catch (error) {\n      console.error(\"Erro ao obter novo token:\", error);\n      throw error; // Propague o erro para que possa ser tratado externamente\n    }\n  };\n\n  const handleEditClick = () => {\n    setEditMode(true);\n    setEmail(paciente.email || \"\");\n    setSenha(\"\");\n    setConfirmarSenha(\"\");\n  };\n  const handleSaveClick = async () => {\n    try {\n      // Validar a confirmação de senha\n      if (senha !== confirmarSenha) {\n        console.error(\"A senha e a confirmação de senha não coincidem\");\n        return;\n      }\n      await axios.put(\"http://localhost:3000/paciente\", {\n        email,\n        senha\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      const newToken = await obterNovoToken(refreshToken);\n      setAcessToken(newToken);\n      setEditMode(false);\n    } catch (error) {\n      console.error(\"Erro ao atualizar informações do paciente:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Informa\\xE7\\xF5es do Paciente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Nome:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), \" \", paciente.nome || \"\", \" \", paciente.sobrenome || \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Data de Nascimento:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), \" \", paciente.dataNascimento || \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"CPF:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), \" \", paciente.cpf || \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nova Senha:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: senha,\n        onChange: e => setSenha(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirmar Senha:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: confirmarSenha,\n        onChange: e => setConfirmarSenha(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveClick,\n        children: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), \" \", paciente.email || \"\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEditClick,\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(PacienteInfo, \"EExYocpxz3HT3wzBr++oy5HXzSM=\");\n_c = PacienteInfo;\nexport default PacienteInfo;\nvar _c;\n$RefreshReg$(_c, \"PacienteInfo\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PacienteInfo","token","_s","paciente","setPaciente","nome","sobrenome","dataNascimento","cpf","email","editMode","setEditMode","setEmail","senha","setSenha","confirmarSenha","setConfirmarSenha","refreshToken","setRefreshToken","accessToken","setAcessToken","fetchData","response","get","headers","Authorization","data","error","console","obterNovoToken","post","newToken","handleEditClick","handleSaveClick","put","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/projeto-ts/src/pages/Pacientes/pacienteInfo.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\ninterface Paciente {\n  nome: string;\n  sobrenome: string;\n  dataNascimento: string;\n  cpf: string;\n  email: string;\n  telefone\n}\n\nconst PacienteInfo: React.FC<{ token: string }> = ({ token }) => {\n  const [paciente, setPaciente] = useState<Paciente>({\n    nome: \"\",\n    sobrenome: \"\",\n    dataNascimento: \"\",\n    cpf: \"\",\n    email: \"\",\n  });\n  const [editMode, setEditMode] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  const [confirmarSenha, setConfirmarSenha] = useState(\"\");\n  const [refreshToken, setRefreshToken] = useState(\"\");\n  const [accessToken, setAcessToken] = useState(token);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3000/paciente\", {\n          headers: {\n            Authorization: accessToken,\n          },\n        });\n        setPaciente(response.data.paciente);\n        setRefreshToken(response.data.refreshToken)\n      } catch (error) {\n        console.error(\"Erro ao obter informações do paciente:\", error);\n      }\n    };\n\n    fetchData();\n  }, [accessToken]);\n\n  const obterNovoToken = async (refreshToken: string) => {\n    try {\n      // Chame a nova rota de renovação de token\n      const response = await axios.post(\"/paciente/refresh-token\", { refreshToken });\n\n      // Retorne o novo token extraído da resposta\n      return response.data.newToken;\n    } catch (error) {\n      console.error(\"Erro ao obter novo token:\", error);\n      throw error; // Propague o erro para que possa ser tratado externamente\n    }\n  };\n\n  const handleEditClick = () => {\n    setEditMode(true);\n    setEmail(paciente.email || \"\");\n    setSenha(\"\");\n    setConfirmarSenha(\"\");\n  };\n\n  const handleSaveClick = async () => {\n    try {\n      // Validar a confirmação de senha\n      if (senha !== confirmarSenha) {\n        console.error(\"A senha e a confirmação de senha não coincidem\");\n        return;\n      }\n\n      await axios.put(\n        \"http://localhost:3000/paciente\",\n        { email, senha },\n        {\n          headers: {\n            Authorization: token,\n          },\n        }\n      );\n\n      const newToken = await obterNovoToken(refreshToken);\n      setAcessToken(newToken);\n\n      setEditMode(false);\n    } catch (error) {\n      console.error(\"Erro ao atualizar informações do paciente:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Informações do Paciente</h2>\n      <div>\n        <strong>Nome:</strong> {paciente.nome || \"\"} {paciente.sobrenome || \"\"}\n      </div>\n      <div>\n        <strong>Data de Nascimento:</strong> {paciente.dataNascimento || \"\"}\n      </div>\n      <div>\n        <strong>CPF:</strong> {paciente.cpf || \"\"}\n      </div>\n      {editMode ? (\n        <div>\n          <label>Email:</label>\n          <input\n            type=\"text\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <label>Nova Senha:</label>\n          <input\n            type=\"password\"\n            value={senha}\n            onChange={(e) => setSenha(e.target.value)}\n          />\n          <label>Confirmar Senha:</label>\n          <input\n            type=\"password\"\n            value={confirmarSenha}\n            onChange={(e) => setConfirmarSenha(e.target.value)}\n          />\n          <button onClick={handleSaveClick}>Salvar</button>\n        </div>\n      ) : (\n        <div>\n          <strong>Email:</strong> {paciente.email || \"\"}\n          <button onClick={handleEditClick}>Editar</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PacienteInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}