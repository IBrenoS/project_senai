{"ast":null,"code":"import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isTuesday\n * @category Weekday Helpers\n * @summary Is the given date Tuesday?\n *\n * @description\n * Is the given date Tuesday?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is Tuesday\n *\n * @example\n * // Is 23 September 2014 Tuesday?\n * const result = isTuesday(new Date(2014, 8, 23))\n * //=> true\n */\nexport function isTuesday(date) {\n  return toDate(date).getDay() === 2;\n}\n\n// Fallback for modularized imports:\nexport default isTuesday;","map":{"version":3,"names":["toDate","isTuesday","date","getDay"],"sources":["D:/projeto-ts/node_modules/date-fns/isTuesday.mjs"],"sourcesContent":["import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isTuesday\n * @category Weekday Helpers\n * @summary Is the given date Tuesday?\n *\n * @description\n * Is the given date Tuesday?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is Tuesday\n *\n * @example\n * // Is 23 September 2014 Tuesday?\n * const result = isTuesday(new Date(2014, 8, 23))\n * //=> true\n */\nexport function isTuesday(date) {\n  return toDate(date).getDay() === 2;\n}\n\n// Fallback for modularized imports:\nexport default isTuesday;\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,cAAc;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAACC,IAAI,EAAE;EAC9B,OAAOF,MAAM,CAACE,IAAI,CAAC,CAACC,MAAM,CAAC,CAAC,KAAK,CAAC;AACpC;;AAEA;AACA,eAAeF,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}