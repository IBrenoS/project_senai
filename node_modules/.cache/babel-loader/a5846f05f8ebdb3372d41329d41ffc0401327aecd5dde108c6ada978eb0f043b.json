{"ast":null,"code":"import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isMonday\n * @category Weekday Helpers\n * @summary Is the given date Monday?\n *\n * @description\n * Is the given date Monday?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is Monday\n *\n * @example\n * // Is 22 September 2014 Monday?\n * const result = isMonday(new Date(2014, 8, 22))\n * //=> true\n */\nexport function isMonday(date) {\n  return toDate(date).getDay() === 1;\n}\n\n// Fallback for modularized imports:\nexport default isMonday;","map":{"version":3,"names":["toDate","isMonday","date","getDay"],"sources":["D:/projeto-ts/node_modules/date-fns/isMonday.mjs"],"sourcesContent":["import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isMonday\n * @category Weekday Helpers\n * @summary Is the given date Monday?\n *\n * @description\n * Is the given date Monday?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is Monday\n *\n * @example\n * // Is 22 September 2014 Monday?\n * const result = isMonday(new Date(2014, 8, 22))\n * //=> true\n */\nexport function isMonday(date) {\n  return toDate(date).getDay() === 1;\n}\n\n// Fallback for modularized imports:\nexport default isMonday;\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,cAAc;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,QAAQA,CAACC,IAAI,EAAE;EAC7B,OAAOF,MAAM,CAACE,IAAI,CAAC,CAACC,MAAM,CAAC,CAAC,KAAK,CAAC;AACpC;;AAEA;AACA,eAAeF,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}