{"ast":null,"code":"var _jsxFileName = \"D:\\\\projeto-ts\\\\src\\\\pages\\\\Signin\\\\login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const [cpf, setCpf] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleLoginClick = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          cpf,\n          senha\n        })\n      });\n      const data = await response.json();\n      onLogin(data.token);\n      if (response.ok) {\n        // Redireciona para a tela inicial se a autenticação for bem-sucedida\n        navigate(\"/tela-inicial\");\n      } else {\n        // Exibe mensagem de erro se a autenticação falhar\n        setError(data.message);\n      }\n    } catch (error) {\n      console.error(\"Você não possui uma conta no nosso sistema:\", error);\n      setError(\"Você não possui uma conta no nosso sistema\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cpf\",\n        children: \"CPF:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"cpf\",\n        value: cpf,\n        onChange: e => setCpf(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"senha\",\n        children: \"Senha:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"senha\",\n        value: senha,\n        onChange: e => setSenha(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 10\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoginClick,\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Ainda n\\xE3o tem cadastro?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/cadastro\",\n          children: \"Crie uma conta aqui.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 6\n  }, this);\n};\n_s(Login, \"+7Vya7JK7//wnk50hHg1ud0fHo8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","Login","onLogin","_s","cpf","setCpf","senha","setSenha","error","setError","navigate","handleLoginClick","response","fetch","method","headers","body","JSON","stringify","data","json","token","ok","message","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","onClick","to","_c","$RefreshReg$"],"sources":["D:/projeto-ts/src/pages/Signin/login.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\ninterface LoginProps {\n  onLogin: (token: string) => void;\n}\n\nconst Login: React.FC<LoginProps> = ({ onLogin }) => {\n  const [cpf, setCpf] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleLoginClick = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ cpf, senha }),\n      });\n\n      const data = await response.json();\n      onLogin(data.token);\n\n      if (response.ok) {\n        // Redireciona para a tela inicial se a autenticação for bem-sucedida\n        navigate(\"/tela-inicial\");\n      } else {\n        // Exibe mensagem de erro se a autenticação falhar\n        setError(data.message);\n      }\n    } catch (error) {\n      console.error(\"Você não possui uma conta no nosso sistema:\", error);\n      setError(\"Você não possui uma conta no nosso sistema\");\n    }\n  };\n\n   return (\n     <div className=\"login-container\">\n       <div className=\"login-form\">\n         <h1>Login</h1>\n         <label htmlFor=\"cpf\">CPF:</label>\n         <input\n           type=\"text\"\n           id=\"cpf\"\n           value={cpf}\n           onChange={(e) => setCpf(e.target.value)}\n         />\n         <label htmlFor=\"senha\">Senha:</label>\n         <input\n           type=\"password\"\n           id=\"senha\"\n           value={senha}\n           onChange={(e) => setSenha(e.target.value)}\n         />\n         {error && <p className=\"error\">{error}</p>}\n         <button onClick={handleLoginClick}>Entrar</button>\n         <p>\n           Ainda não tem cadastro?{\" \"}\n           <Link to=\"/cadastro\">Crie uma conta aqui.</Link>\n         </p>\n       </div>\n     </div>\n   );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}