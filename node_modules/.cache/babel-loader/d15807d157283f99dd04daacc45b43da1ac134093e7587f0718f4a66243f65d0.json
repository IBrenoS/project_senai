{"ast":null,"code":"var _jsxFileName = \"D:\\\\projeto-ts\\\\src\\\\components\\\\GerenPacientes.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientManagement = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    // Aqui você fará uma chamada à API para obter a lista de pacientes\n    // Por enquanto, usaremos dados de exemplo\n    const samplePatients = [{\n      id: 1,\n      name: \"Maria Santos\",\n      lastConsultation: \"2024-03-18\",\n      dateOfBirth: \"1980-05-15\"\n    }, {\n      id: 2,\n      name: \"João Silva\",\n      lastConsultation: \"2024-03-17\",\n      dateOfBirth: \"1975-10-22\"\n    }\n    // Outros pacientes...\n    ];\n\n    setPatients(samplePatients);\n  }, []);\n  useEffect(() => {\n    // Implementar lógica de busca\n    const results = patients.filter(patient => patient.name.toLowerCase().includes(searchTerm.toLowerCase()));\n    setSearchResults(results);\n  }, [searchTerm, patients]);\n  const handleSearch = e => {\n    setSearchTerm(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cadastro e Busca de Pacientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Buscar paciente...\",\n      value: searchTerm,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\xDAltima Consulta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Data de Nascimento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: searchResults.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.lastConsultation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.dateOfBirth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, patient.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientManagement, \"5/QKFByUMbTtrVMHH3GUp6PJu7A=\");\n_c = PatientManagement;\nexport default PatientManagement;\nvar _c;\n$RefreshReg$(_c, \"PatientManagement\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PatientManagement","_s","patients","setPatients","searchTerm","setSearchTerm","searchResults","setSearchResults","samplePatients","id","name","lastConsultation","dateOfBirth","results","filter","patient","toLowerCase","includes","handleSearch","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","map","_c","$RefreshReg$"],"sources":["D:/projeto-ts/src/components/GerenPacientes.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { format } from \"date-fns\"\n\ninterface Patient {\n  id: number;\n  name: string;\n  lastConsultation: string;\n  dateOfBirth: string;\n}\n\nconst PatientManagement: React.FC = () => {\n  const [patients, setPatients] = useState<Patient[]>([]);\n  const [searchTerm, setSearchTerm] = useState<string>(\"\");\n  const [searchResults, setSearchResults] = useState<Patient[]>([]);\n\n  useEffect(() => {\n    // Aqui você fará uma chamada à API para obter a lista de pacientes\n    // Por enquanto, usaremos dados de exemplo\n    const samplePatients: Patient[] = [\n      {\n        id: 1,\n        name: \"Maria Santos\",\n        lastConsultation: \"2024-03-18\",\n        dateOfBirth: \"1980-05-15\",\n      },\n      {\n        id: 2,\n        name: \"João Silva\",\n        lastConsultation: \"2024-03-17\",\n        dateOfBirth: \"1975-10-22\",\n      },\n      // Outros pacientes...\n    ];\n    setPatients(samplePatients);\n  }, []);\n\n  useEffect(() => {\n    // Implementar lógica de busca\n    const results = patients.filter((patient) =>\n      patient.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    setSearchResults(results);\n  }, [searchTerm, patients]);\n\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Cadastro e Busca de Pacientes</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Buscar paciente...\"\n        value={searchTerm}\n        onChange={handleSearch}\n      />\n      <table>\n        <thead>\n          <tr>\n            <th>Nome</th>\n            <th>Última Consulta</th>\n            <th>Data de Nascimento</th>\n          </tr>\n        </thead>\n        <tbody>\n          {searchResults.map((patient) => (\n            <tr key={patient.id}>\n              <td>{patient.name}</td>\n              <td>{patient.lastConsultation}</td>\n              <td>{patient.dateOfBirth}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default PatientManagement;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}