{"ast":null,"code":"var _jsxFileName = \"D:\\\\projeto-ts\\\\src\\\\components\\\\Financeiro.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Chart } from \"react-google-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FinancialManagement = () => {\n  _s();\n  const [financialData, setFinancialData] = useState([]);\n  const [currentBalance, setCurrentBalance] = useState(0);\n  useEffect(() => {\n    // Aqui você fará uma chamada à API para obter os dados financeiros\n    // Por enquanto, usaremos dados de exemplo\n    const sampleFinancialData = [{\n      id: 1,\n      type: \"Receita\",\n      description: \"Consulta\",\n      amount: 100,\n      date: \"2024-03-18\"\n    }, {\n      id: 2,\n      type: \"Despesa\",\n      description: \"Medicamentos\",\n      amount: 50,\n      date: \"2024-03-17\"\n    }, {\n      id: 3,\n      type: \"Transferência\",\n      description: \"Transferência bancária\",\n      amount: 30,\n      date: \"2024-03-16\"\n    }\n    // Outros registros financeiros...\n    ];\n\n    setFinancialData(sampleFinancialData);\n  }, []);\n\n  // Calculando o saldo atual com base nos registros financeiros\n  useEffect(() => {\n    const newBalance = financialData.reduce((balance, item) => {\n      if (item.type === \"Receita\" || item.type === \"Transferência\") {\n        return balance + item.amount;\n      } else {\n        return balance - item.amount;\n      }\n    }, 0);\n    setCurrentBalance(newBalance);\n  }, [financialData]);\n\n  // Preparando os dados para o gráfico do Google Charts\n  const chartData = financialData.map(item => [item.description, item.amount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gest\\xE3o Financeira\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Saldo Atual: R$ \", currentBalance.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      width: \"500px\",\n      height: \"300px\",\n      chartType: \"PieChart\",\n      loader: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this),\n      data: [[\"Descrição\", \"Valor\"], ...chartData],\n      options: {\n        title: \"Financeiro do Caixa\"\n      },\n      rootProps: {\n        \"data-testid\": \"1\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tipo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Descri\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Valor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: financialData.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(FinancialManagement, \"sx74zt32OZuvofRJcSkv8hE3g6A=\");\n_c = FinancialManagement;\nexport default FinancialManagement;\nvar _c;\n$RefreshReg$(_c, \"FinancialManagement\");","map":{"version":3,"names":["React","useState","useEffect","Chart","jsxDEV","_jsxDEV","FinancialManagement","_s","financialData","setFinancialData","currentBalance","setCurrentBalance","sampleFinancialData","id","type","description","amount","date","newBalance","reduce","balance","item","chartData","map","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","width","height","chartType","loader","data","options","title","rootProps","_c","$RefreshReg$"],"sources":["D:/projeto-ts/src/components/Financeiro.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Chart } from \"react-google-charts\";\n\ninterface FinancialEntry {\n  id: number;\n  type: \"Receita\" | \"Despesa\" | \"Transferência\";\n  description: string;\n  amount: number;\n  date: string;\n}\n\nconst FinancialManagement: React.FC = () => {\n  const [financialData, setFinancialData] = useState<FinancialEntry[]>([]);\n  const [currentBalance, setCurrentBalance] = useState(0);\n\n  useEffect(() => {\n    // Aqui você fará uma chamada à API para obter os dados financeiros\n    // Por enquanto, usaremos dados de exemplo\n    const sampleFinancialData: FinancialEntry[] = [\n      {\n        id: 1,\n        type: \"Receita\",\n        description: \"Consulta\",\n        amount: 100,\n        date: \"2024-03-18\",\n      },\n      {\n        id: 2,\n        type: \"Despesa\",\n        description: \"Medicamentos\",\n        amount: 50,\n        date: \"2024-03-17\",\n      },\n      {\n        id: 3,\n        type: \"Transferência\",\n        description: \"Transferência bancária\",\n        amount: 30,\n        date: \"2024-03-16\",\n      },\n      // Outros registros financeiros...\n    ];\n    setFinancialData(sampleFinancialData);\n  }, []);\n\n  // Calculando o saldo atual com base nos registros financeiros\n  useEffect(() => {\n    const newBalance = financialData.reduce((balance, item) => {\n      if (item.type === \"Receita\" || item.type === \"Transferência\") {\n        return balance + item.amount;\n      } else {\n        return balance - item.amount;\n      }\n    }, 0);\n    setCurrentBalance(newBalance);\n  }, [financialData]);\n\n  // Preparando os dados para o gráfico do Google Charts\n  const chartData = financialData.map((item) => [\n    item.description,\n    item.amount,\n  ]);\n\n  return (\n    <div>\n      <h2>Gestão Financeira</h2>\n      <h3>Saldo Atual: R$ {currentBalance.toFixed(2)}</h3>\n      <Chart\n        width={\"500px\"}\n        height={\"300px\"}\n        chartType=\"PieChart\"\n        loader={<div>Loading Chart</div>}\n        data={[[\"Descrição\", \"Valor\"], ...chartData]}\n        options={{\n          title: \"Financeiro do Caixa\",\n        }}\n        rootProps={{ \"data-testid\": \"1\" }}\n      />\n      <table>\n        <thead>\n          <tr>\n            <th>Tipo</th>\n            <th>Descrição</th>\n            <th>Valor</th>\n            <th>Data</th>\n          </tr>\n        </thead>\n        <tbody>\n          {financialData.map((item) => (\n            <tr key={item.id}>\n              <td>{item.type}</td>\n              <td>{item.description}</td>\n              <td>{item.amount}</td>\n              <td>{item.date}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {/* Aqui você pode adicionar ferramentas adicionais de gestão financeira, como lançamento financeiro da agenda ou prontuário, cadastro de convênios, etc. */}\n    </div>\n  );\n};\n\nexport default FinancialManagement;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}