{"ast":null,"code":"var _jsxFileName = \"D:\\\\projeto-ts\\\\src\\\\components\\\\ProntuarioElect.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ElectronicHealthRecord = () => {\n  _s();\n  const [selectedPatient, setSelectedPatient] = useState(\"\");\n  const [healthData, setHealthData] = useState({});\n\n  // Aqui você pode definir a lógica para obter os dados de saúde do paciente selecionado\n  // e atualizar o estado \"healthData\"\n\n  const handlePatientSelect = patientId => {\n    setSelectedPatient(patientId);\n    // Aqui você faria uma chamada à API para obter os dados de saúde do paciente selecionado\n    // e atualizar o estado \"healthData\"\n  };\n\n  // Aqui você pode definir a lógica para atualizar os dados de saúde do paciente\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Prontu\\xE1rio Eletr\\xF4nico Personaliz\\xE1vel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedPatient,\n      onChange: e => handlePatientSelect(e.target.value),\n      children: /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Selecione um paciente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(ElectronicHealthRecord, \"gimaJ9+zfDJXeaDv1YZ/CUBlQOQ=\");\n_c = ElectronicHealthRecord;\nexport default ElectronicHealthRecord;\nvar _c;\n$RefreshReg$(_c, \"ElectronicHealthRecord\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ElectronicHealthRecord","_s","selectedPatient","setSelectedPatient","healthData","setHealthData","handlePatientSelect","patientId","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/projeto-ts/src/components/ProntuarioElect.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst ElectronicHealthRecord: React.FC = () => {\n  const [selectedPatient, setSelectedPatient] = useState(\"\");\n  const [healthData, setHealthData] = useState({});\n\n  // Aqui você pode definir a lógica para obter os dados de saúde do paciente selecionado\n  // e atualizar o estado \"healthData\"\n\n  const handlePatientSelect = (patientId: string) => {\n    setSelectedPatient(patientId);\n    // Aqui você faria uma chamada à API para obter os dados de saúde do paciente selecionado\n    // e atualizar o estado \"healthData\"\n  };\n\n  // Aqui você pode definir a lógica para atualizar os dados de saúde do paciente\n\n  return (\n    <div>\n      <h2>Prontuário Eletrônico Personalizável</h2>\n      <select\n        value={selectedPatient}\n        onChange={(e) => handlePatientSelect(e.target.value)}\n      >\n        <option value=\"\">Selecione um paciente</option>\n        {/* Aqui você poderia mapear os pacientes disponíveis e criar as opções do select */}\n      </select>\n      {/* Aqui você exibiria os dados de saúde do paciente selecionado de forma personalizável */}\n    </div>\n  );\n};\n\nexport default ElectronicHealthRecord;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,sBAAgC,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhD;EACA;;EAEA,MAAMS,mBAAmB,GAAIC,SAAiB,IAAK;IACjDJ,kBAAkB,CAACI,SAAS,CAAC;IAC7B;IACA;EACF,CAAC;;EAED;;EAEA,oBACER,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAoC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7Cb,OAAA;MACEc,KAAK,EAAEX,eAAgB;MACvBY,QAAQ,EAAGC,CAAC,IAAKT,mBAAmB,CAACS,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAL,QAAA,eAErDT,OAAA;QAAQc,KAAK,EAAC,EAAE;QAAAL,QAAA,EAAC;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEzC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEN,CAAC;AAEV,CAAC;AAACX,EAAA,CA5BID,sBAAgC;AAAAiB,EAAA,GAAhCjB,sBAAgC;AA8BtC,eAAeA,sBAAsB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}